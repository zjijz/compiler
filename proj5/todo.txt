Queue for Recent Variables
-When variables are loaded into registers, push them to queue
-When you need to remove a variable from a register to make space,
 the one you remove is whatever the queue pops
-Could optimize this to better keep variables in registers to minimize
 read/write to RAM
  - LinkedList to be able to easily move values already on list when seeing them?
 ______________________________
 Compiler Flags
 - Levels of Optimization for Compiler
   - O1: (Default) Code will be compiled in a way that the best programmer would write it
     - Good register management
     - Minimum read / writes to RAM
   - O2: Things that would be beneficial, but annoying for a programmer to do
     - Keeping one (or a few) memory addresses and using offsets from these addresses
   - O3: Restructuring code
     - Inlining functions
     - Loop unrolling
     - Recursion unrolling
     - Evaluation of variables to see if insturctions can be moved around to better facilitate register management
 ______________________________
 Optimizations
 - Keeping track of current variable values in sym_table to further reduce calls to read from RAM (O1)
   (Since initialization can be done with immediates instead of loading addresses and values)
   - Done for 'int'
 - Change Queue to be a more complete LinkedList (O1)
 - Allowing a register to track more than one variable (for instance, in situations of equality)(O1)
   - The register would then just have to know it has two values, and save off both whenever the register is freed
 - Add code to track what's in $a0, $a1, and $v0 (use these registers as potential places to store variables)
 - Write a way to evaluate if only the address of a variable is needed (O2)
 ______________________________
 Errors
 - None
 ______________________________
 Improvements
 - Pretty Print for sym_table, reg_table, aux_reg_table, and var_queue
 - Abstract and merge _process_id and _assign_id more
    - these methods are very similar, except one throws a Semantic Error when it finds a variable that isn't initialized
 -  Helper function / class to make dictionaries for use with var_queue

 - change all update to reg_table to make use of type
 - add a method that updates the reg_table only (for expr)
 - add a method that updated the sym_table only (for free_register)
 - abstract out the find_free_reg function for sacing address to $s0
 - write a function to load variables/address into registers to allow for better code reuse
 - change read_mem and write_mem to
 - expr function needs to be fixed for efficiency

